CCS PCH C Compiler, Version 4.108, 26124               21-nov-11 17:15

               Filename: C:\Users\Sabas\Desktop\AGV\Programa\prueba de puertos serie\seriales2.lst

               ROM used: 490 bytes (1%)
                         Largest free fragment is 32274
               RAM used: 26 (1%) at main() level
                         28 (1%) worst case
               Stack:    3 worst case (1 in main + 2 for interrupts)

*
0000:  GOTO   01B6
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  FF5,15
003C:  MOVFF  FF6,16
0040:  MOVFF  FF7,17
0044:  MOVFF  00,0E
0048:  MOVFF  01,0F
004C:  MOVFF  02,10
0050:  MOVFF  03,11
0054:  BTFSS  FF2.4
0056:  GOTO   0060
005A:  BTFSC  FF2.1
005C:  GOTO   00F4
0060:  MOVFF  0E,00
0064:  MOVFF  0F,01
0068:  MOVFF  10,02
006C:  MOVFF  11,03
0070:  MOVFF  0C,FE9
0074:  MOVFF  07,FEA
0078:  BSF    07.7
007A:  MOVFF  08,FE1
007E:  MOVFF  09,FE2
0082:  MOVFF  0A,FD9
0086:  MOVFF  0B,FDA
008A:  MOVFF  12,FF3
008E:  MOVFF  13,FF4
0092:  MOVFF  14,FFA
0096:  MOVFF  15,FF5
009A:  MOVFF  16,FF6
009E:  MOVFF  17,FF7
00A2:  MOVF   04,W
00A4:  MOVFF  06,FE0
00A8:  MOVFF  05,FD8
00AC:  RETFIE 0
.................... #include <18F4550.h> 
.................... //////// Standard Header file for the PIC18F4550 device //////////////// 
.................... #device PIC18F4550 
.................... #list 
....................  
.................... #device adc=8 
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES WDT128                   //Watch Dog Timer uses 1:128 Postscale 
.................... #FUSES HS                       //High speed Osc (> 4mhz for PCM/PCH) (>10mhz for PCD) 
.................... #FUSES NOPROTECT                //Code not protected from reading 
.................... #FUSES NOBROWNOUT               //No brownout reset 
.................... #FUSES BORV20                   //Brownout reset at 2.0V 
.................... #FUSES PUT                      //Power Up Timer 
.................... #FUSES NOCPD                    //No EE protection 
.................... #FUSES STVREN                   //Stack full/underflow will cause reset 
.................... #FUSES NODEBUG                  //No Debug mode for ICD 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOWRT                    //Program memory not write protected 
.................... #FUSES NOWRTD                   //Data EEPROM not write protected 
.................... #FUSES IESO                     //Internal External Switch Over mode enabled 
.................... #FUSES FCMEN                    //Fail-safe clock monitor enabled 
.................... #FUSES PBADEN                   //PORTB pins are configured as analog input channels on RESET 
.................... #FUSES NOWRTC                   //configuration not registers write protected 
.................... #FUSES NOWRTB                   //Boot block not write protected 
.................... #FUSES NOEBTR                   //Memory not protected from table reads 
.................... #FUSES NOEBTRB                  //Boot block not protected from table reads 
.................... #FUSES NOCPB                    //No Boot Block code protection 
.................... #FUSES MCLR                     //Master Clear pin enabled 
.................... #FUSES LPT1OSC                  //Timer1 configured for low-power operation 
.................... #FUSES NOXINST                  //Extended set extension and Indexed Addressing mode disabled (Legacy mode) 
.................... #FUSES PLL12                    //Divide By 12(48MHz oscillator input) 
.................... #FUSES CPUDIV4                  //System Clock by 4 
.................... #FUSES USBDIV                   //USB clock source comes from PLL divide by 2 
.................... #FUSES VREGEN                   //USB voltage regulator enabled 
.................... #FUSES ICPRT                    //ICPRT enabled 
....................  
.................... #use delay(crystal=20000000) //clock=5000000 
....................  
.................... //-----------------Se le pde a picc que no mueva los TRIS de los puertos 
.................... #use FAST_IO(A) 
.................... #use FAST_IO(B) 
.................... #use FAST_IO(C) 
.................... #use FAST_IO(D) 
.................... #use FAST_IO(E) 
....................  
.................... #use rs232(baud=9600,parity=N,xmit=PIN_C6,rcv=PIN_C7,bits=8, stream=COM_A) 
.................... #use rs232(baud=9600,parity=N,xmit=PIN_B1,rcv=PIN_B0,bits=8,stream=COM_B) 
00AE:  BTFSC  F81.0
00B0:  BRA    00AE
00B2:  MOVLW  08
00B4:  MOVWF  00
00B6:  CLRF   1B
00B8:  BSF    00.7
00BA:  BRA    00D8
00BC:  BCF    00.7
00BE:  BRA    00D8
00C0:  BCF    FD8.0
00C2:  BTFSC  F81.0
00C4:  BSF    FD8.0
00C6:  RRCF   1B,F
00C8:  BSF    00.6
00CA:  BRA    00D8
00CC:  BCF    00.6
00CE:  DECFSZ 00,F
00D0:  BRA    00C0
00D2:  MOVFF  1B,01
00D6:  BRA    00F0
00D8:  MOVLW  A7
00DA:  BTFSC  00.7
00DC:  MOVLW  2D
00DE:  MOVWF  01
00E0:  DECFSZ 01,F
00E2:  BRA    00E0
00E4:  NOP   
00E6:  BTFSC  00.7
00E8:  BRA    00BC
00EA:  BTFSC  00.6
00EC:  BRA    00CC
00EE:  BRA    00C0
00F0:  GOTO   0100 (RETURN)
*
0176:  BCF    F8A.1
0178:  MOVLW  08
017A:  MOVWF  01
017C:  BRA    017E
017E:  NOP   
0180:  BSF    01.7
0182:  BRA    01A0
0184:  BCF    01.7
0186:  RRCF   1A,F
0188:  BTFSC  FD8.0
018A:  BSF    F8A.1
018C:  BTFSS  FD8.0
018E:  BCF    F8A.1
0190:  BSF    01.6
0192:  BRA    01A0
0194:  BCF    01.6
0196:  DECFSZ 01,F
0198:  BRA    0186
019A:  BRA    019C
019C:  NOP   
019E:  BSF    F8A.1
01A0:  MOVLW  A7
01A2:  MOVWF  FE9
01A4:  DECFSZ FE9,F
01A6:  BRA    01A4
01A8:  BRA    01AA
01AA:  BTFSC  01.7
01AC:  BRA    0184
01AE:  BTFSC  01.6
01B0:  BRA    0194
01B2:  GOTO   01E8 (RETURN)
....................  
.................... char posicion; 
....................  
.................... #int_EXT 
.................... void  EXT_isr(void)  
.................... { 
....................     
....................    disable_interrupts(INT_EXT); 
*
00F4:  BCF    FF2.4
....................    disable_interrupts(GLOBAL); 
00F6:  BCF    FF2.6
00F8:  BCF    FF2.7
00FA:  BTFSC  FF2.7
00FC:  BRA    00F8
....................    posicion=fgetc(COM_B);     //Se lee la posicion inicial del brazo 
00FE:  BRA    00AE
0100:  MOVFF  01,19
....................   
.................... } 
....................  
....................  
....................  
....................  
....................  
0104:  BCF    FF2.1
0106:  GOTO   0060
.................... void CPU() 
.................... { 
....................  
....................    setup_adc_ports(NO_ANALOGS|VSS_VDD); 
010A:  MOVF   FC1,W
010C:  ANDLW  C0
010E:  IORLW  0F
0110:  MOVWF  FC1
....................    setup_adc(ADC_CLOCK_DIV_2); 
0112:  BCF    FC0.0
0114:  BCF    FC0.1
0116:  BCF    FC0.2
0118:  BCF    FC0.7
011A:  BSF    FC2.0
....................    setup_psp(PSP_DISABLED); 
011C:  BCF    F96.4
....................    setup_spi(SPI_SS_DISABLED); 
011E:  BCF    FC6.5
0120:  MOVLW  01
0122:  MOVWF  FC6
0124:  MOVLW  00
0126:  MOVWF  FC7
....................    setup_wdt(WDT_OFF); 
0128:  BCF    FD1.0
....................    setup_timer_0(RTCC_INTERNAL); 
012A:  MOVLW  80
012C:  MOVWF  FD5
....................    setup_timer_1(T1_DISABLED); 
012E:  CLRF   FCD
....................    setup_timer_2(T2_DISABLED,0,1); 
0130:  MOVLW  00
0132:  MOVWF  FCA
0134:  MOVLW  00
0136:  MOVWF  FCB
....................    setup_ccp1(CCP_PWM);       //PWM1 activo 
0138:  BCF    F8B.2
013A:  MOVLW  0C
013C:  MOVWF  FBD
013E:  CLRF   FB7
0140:  CLRF   FB6
....................    setup_ccp2(CCP_PWM);       //PWM2 Activo 
0142:  BCF    F8B.1
0144:  MOVWF  FBA
....................    setup_comparator(NC_NC_NC_NC); 
0146:  MOVLW  07
0148:  MOVWF  FB4
014A:  MOVF   F92,W
014C:  MOVWF  F92
014E:  MOVLW  10
0150:  MOVWF  00
0152:  DECFSZ 00,F
0154:  BRA    0152
0156:  NOP   
0158:  MOVF   FB4,W
015A:  BCF    FA1.6
....................    enable_interrupts(INT_EXT);   //Interrupcion del puerto B(encoder) 
015C:  BSF    FF2.4
....................    enable_interrupts(GLOBAL);    //Interrupciones Globales 
015E:  MOVLW  C0
0160:  IORWF  FF2,F
....................    enable_interrupts(INT_RDA);   //Interrupcion del serial (Bluetooth) 
0162:  BSF    F9D.5
....................    ext_int_edge(H_TO_L);         //Interrupcion por flanco de bajada 
0164:  BCF    FF1.6
....................    set_pwm1_duty(0);             //Motor derecho 
0166:  CLRF   FBE
....................    set_pwm2_duty(0);             //Motor Izquierdo 
0168:  CLRF   FBB
....................    SET_TRIS_B(0B00000001);       //RB0.-Rx y RB1.-Tx 
016A:  MOVLW  01
016C:  MOVWF  F93
....................    SET_TRIS_C(0B10000000);       //RC7.-Rx y RC6.-Tx 
016E:  MOVLW  80
0170:  MOVWF  F94
.................... } 
0172:  GOTO   01E2 (RETURN)
....................  
.................... void main() 
.................... { 
*
01B6:  CLRF   FF8
01B8:  BCF    FD0.7
01BA:  BSF    07.7
01BC:  CLRF   FEA
01BE:  CLRF   FE9
01C0:  BSF    FB8.3
01C2:  MOVLW  08
01C4:  MOVWF  FAF
01C6:  MOVLW  02
01C8:  MOVWF  FB0
01CA:  MOVLW  A6
01CC:  MOVWF  FAC
01CE:  MOVLW  90
01D0:  MOVWF  FAB
01D2:  BSF    F8A.1
01D4:  MOVF   FC1,W
01D6:  ANDLW  C0
01D8:  IORLW  0F
01DA:  MOVWF  FC1
01DC:  MOVLW  07
01DE:  MOVWF  FB4
....................     
....................    CPU(); 
01E0:  BRA    010A
....................     
....................    fprintf(COM_B,"%c",'c');   //Se pide al picencoder posicion del encoder 
01E2:  MOVLW  63
01E4:  MOVWF  1A
01E6:  BRA    0176
....................    disable_interrupts(INT_EXT);  //Se desactiva la interrupcion ya teniendo la posicion 
01E8:  BCF    FF2.4
....................     
....................    while(1){ 
....................  
....................  
....................    //fprintf(COM_A,"%c",recibido);    //putc(recibido); // Envia mensaje por serial COM1 
....................     
....................    } 
01EA:  BRA    01EA
.................... } 
01EC:  SLEEP 

Configuration Fuses:
   Word  1: CC24   IESO FCMEN HS PLL5 CPUDIV1 USBDIV
   Word  2: 0E38   NOBROWNOUT WDT128 NOWDT BORV20 PUT VREGEN
   Word  3: 8700   PBADEN CCP2C1 MCLR LPT1OSC
   Word  4: 00A1   STVREN NODEBUG NOLVP NOXINST ICPRT
   Word  5: C00F   NOPROTECT NOCPD NOCPB
   Word  6: E00F   NOWRT NOWRTD NOWRTC NOWRTB
   Word  7: 400F   NOEBTR NOEBTRB
