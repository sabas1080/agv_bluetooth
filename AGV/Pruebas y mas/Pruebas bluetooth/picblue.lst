CCS PCH C Compiler, Version 4.124, 5967               26-nov-11 21:28

               Filename: C:\Users\Sabas\Desktop\AGV\Pruebas bluetooth\picblue.lst

               ROM used: 384 bytes (1%)
                         Largest free fragment is 32380
               RAM used: 26 (2%) at main() level
                         27 (2%) worst case
               Stack:    2 worst case (1 in main + 1 for interrupts)

*
0000:  GOTO   00E4
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  FF5,15
003C:  MOVFF  FF6,16
0040:  MOVFF  FF7,17
0044:  MOVFF  00,0E
0048:  MOVFF  01,0F
004C:  MOVFF  02,10
0050:  MOVFF  03,11
0054:  BTFSS  F9D.5
0056:  GOTO   0060
005A:  BTFSC  F9E.5
005C:  GOTO   00AE
0060:  MOVFF  0E,00
0064:  MOVFF  0F,01
0068:  MOVFF  10,02
006C:  MOVFF  11,03
0070:  MOVFF  0C,FE9
0074:  MOVFF  07,FEA
0078:  BSF    07.7
007A:  MOVFF  08,FE1
007E:  MOVFF  09,FE2
0082:  MOVFF  0A,FD9
0086:  MOVFF  0B,FDA
008A:  MOVFF  12,FF3
008E:  MOVFF  13,FF4
0092:  MOVFF  14,FFA
0096:  MOVFF  15,FF5
009A:  MOVFF  16,FF6
009E:  MOVFF  17,FF7
00A2:  MOVF   04,W
00A4:  MOVFF  06,FE0
00A8:  MOVFF  05,FD8
00AC:  RETFIE 0
.................... #include <18F452.h> 
.................... //////// Standard Header file for the PIC18F452 device //////////////// 
.................... #device PIC18F452 
.................... #list 
....................  
.................... #device adc=8 
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES WDT128                   //Watch Dog Timer uses 1:128 Postscale 
.................... #FUSES HS                       //High speed Osc (> 4mhz for PCM/PCH) (>10mhz for PCD) 
.................... #FUSES NOOSCSEN                 //Oscillator switching is disabled, main oscillator is source 
.................... #FUSES PUT                      //Power Up Timer 
.................... #FUSES NOBROWNOUT               //No brownout reset 
.................... #FUSES BORV27                   //Brownout reset at 2.7V 
.................... #FUSES STVREN                   //Stack full/underflow will cause reset 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NODEBUG                  //No Debug mode for ICD 
.................... #FUSES NOPROTECT                //Code not protected from reading 
.................... #FUSES NOCPB                    //No Boot Block code protection 
.................... #FUSES NOCPD                    //No EE protection 
.................... #FUSES NOWRT                    //Program memory not write protected 
.................... #FUSES NOWRTC                   //configuration not registers write protected 
.................... #FUSES NOWRTB                   //Boot block not write protected 
.................... #FUSES NOWRTD                   //Data EEPROM not write protected 
.................... #FUSES NOEBTR                   //Memory not protected from table reads 
.................... #FUSES NOEBTRB                  //Boot block not protected from table reads 
....................  
.................... #use delay(clock=10000000) 
*
00BC:  CLRF   FEA
00BE:  MOVLW  1A
00C0:  MOVWF  FE9
00C2:  MOVF   FEF,W
00C4:  BZ    00E2
00C6:  MOVLW  03
00C8:  MOVWF  01
00CA:  CLRF   00
00CC:  DECFSZ 00,F
00CE:  BRA    00CC
00D0:  DECFSZ 01,F
00D2:  BRA    00CA
00D4:  MOVLW  3C
00D6:  MOVWF  00
00D8:  DECFSZ 00,F
00DA:  BRA    00D8
00DC:  BRA    00DE
00DE:  DECFSZ FEF,F
00E0:  BRA    00C6
00E2:  RETURN 0
.................... #use rs232(baud=9600,parity=N,xmit=PIN_C6,rcv=PIN_C7,bits=8) 
.................... char CAR; 
....................  
.................... #int_RDA 
.................... void  RDA_isr(void)  
.................... { 
.................... CAR=getc(); 
*
00AE:  BTFSS  F9E.5
00B0:  BRA    00AE
00B2:  MOVFF  FAE,19
.................... } 
....................  
....................  
....................  
....................  
....................  
00B6:  BCF    F9E.5
00B8:  GOTO   0060
.................... void main() 
.................... { 
*
00E4:  CLRF   FF8
00E6:  BCF    FD0.7
00E8:  BSF    07.7
00EA:  CLRF   FEA
00EC:  CLRF   FE9
00EE:  MOVLW  40
00F0:  MOVWF  FAF
00F2:  MOVLW  A6
00F4:  MOVWF  FAC
00F6:  MOVLW  90
00F8:  MOVWF  FAB
00FA:  BSF    FC1.0
00FC:  BSF    FC1.1
00FE:  BSF    FC1.2
0100:  BCF    FC1.3
....................  
....................    setup_adc_ports(NO_ANALOGS); 
0102:  BSF    FC1.0
0104:  BSF    FC1.1
0106:  BSF    FC1.2
0108:  BCF    FC1.3
....................    setup_adc(ADC_CLOCK_DIV_2); 
010A:  BCF    FC1.6
010C:  BCF    FC2.6
010E:  BCF    FC2.7
0110:  BCF    FC1.7
0112:  BSF    FC2.0
....................    setup_psp(PSP_DISABLED); 
0114:  BCF    F96.4
....................    setup_spi(SPI_SS_DISABLED); 
0116:  BCF    FC6.5
0118:  BCF    F94.5
011A:  BSF    F94.4
011C:  BCF    F94.3
011E:  MOVLW  01
0120:  MOVWF  FC6
0122:  MOVLW  00
0124:  MOVWF  FC7
....................    setup_wdt(WDT_OFF); 
0126:  BCF    FD1.0
....................    setup_timer_0(RTCC_INTERNAL); 
0128:  MOVLW  80
012A:  MOVWF  FD5
....................    setup_timer_1(T1_DISABLED); 
012C:  CLRF   FCD
....................    setup_timer_2(T2_DISABLED,0,1); 
012E:  MOVLW  00
0130:  MOVWF  FCA
0132:  MOVLW  00
0134:  MOVWF  FCB
....................    setup_timer_3(T3_DISABLED|T3_DIV_BY_1); 
0136:  CLRF   FB1
....................    setup_ccp1(CCP_OFF); 
0138:  BSF    F94.2
013A:  CLRF   FBD
....................    enable_interrupts(INT_RDA); 
013C:  BSF    F9D.5
....................    enable_interrupts(GLOBAL); 
013E:  MOVLW  C0
0140:  IORWF  FF2,F
....................  
....................    while(1) 
....................    { 
....................       if(CAR=='a') 
0142:  MOVF   19,W
0144:  SUBLW  61
0146:  BNZ   0150
....................       { 
....................       output_high(PIN_A0); 
0148:  BCF    F92.0
014A:  BSF    F89.0
....................       output_low(PIN_A1); 
014C:  BCF    F92.1
014E:  BCF    F89.1
....................       } 
....................       if(CAR=='b') 
0150:  MOVF   19,W
0152:  SUBLW  62
0154:  BNZ   015E
....................       { 
....................       output_high(PIN_A1); 
0156:  BCF    F92.1
0158:  BSF    F89.1
....................       output_low(PIN_A0); 
015A:  BCF    F92.0
015C:  BCF    F89.0
....................       } 
....................       if(CAR=='c') 
015E:  MOVF   19,W
0160:  SUBLW  63
0162:  BNZ   016C
....................       { 
....................       output_low(PIN_A0); 
0164:  BCF    F92.0
0166:  BCF    F89.0
....................       output_low(PIN_A1); 
0168:  BCF    F92.1
016A:  BCF    F89.1
....................       } 
....................       output_high(PIN_C0); 
016C:  BCF    F94.0
016E:  BSF    F8B.0
....................       delay_ms(100); 
0170:  MOVLW  64
0172:  MOVWF  1A
0174:  RCALL  00BC
....................       output_low(PIN_C0); 
0176:  BCF    F94.0
0178:  BCF    F8B.0
....................       delay_ms(100); 
017A:  MOVLW  64
017C:  MOVWF  1A
017E:  RCALL  00BC
....................    } 
0180:  BRA    0142
.................... } 
0182:  SLEEP 

Configuration Fuses:
   Word  1: 2200   HS NOOSCSEN
   Word  2: 0E08   PUT NOBROWNOUT BORV27 NOWDT WDT128
   Word  3: 0100   CCP2C1
   Word  4: 0081   STVREN NOLVP NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
