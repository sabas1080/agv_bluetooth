CCS PCH C Compiler, Version 4.124, 5967               09-dic-11 01:35

               Filename: C:\Users\Sabas\Desktop\AGV\Control de motores\controldemotores.lst

               ROM used: 756 bytes (2%)
                         Largest free fragment is 32008
               RAM used: 27 (1%) at main() level
                         29 (1%) worst case
               Stack:    3 worst case (1 in main + 2 for interrupts)

*
0000:  GOTO   01B2
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  FF5,15
003C:  MOVFF  FF6,16
0040:  MOVFF  FF7,17
0044:  MOVFF  00,0E
0048:  MOVFF  01,0F
004C:  MOVFF  02,10
0050:  MOVFF  03,11
0054:  BTFSS  FF0.4
0056:  GOTO   0060
005A:  BTFSC  FF0.1
005C:  GOTO   00E0
0060:  BTFSS  F9D.5
0062:  GOTO   006C
0066:  BTFSC  F9E.5
0068:  GOTO   00EC
006C:  MOVFF  0E,00
0070:  MOVFF  0F,01
0074:  MOVFF  10,02
0078:  MOVFF  11,03
007C:  MOVFF  0C,FE9
0080:  MOVFF  07,FEA
0084:  BSF    07.7
0086:  MOVFF  08,FE1
008A:  MOVFF  09,FE2
008E:  MOVFF  0A,FD9
0092:  MOVFF  0B,FDA
0096:  MOVFF  12,FF3
009A:  MOVFF  13,FF4
009E:  MOVFF  14,FFA
00A2:  MOVFF  15,FF5
00A6:  MOVFF  16,FF6
00AA:  MOVFF  17,FF7
00AE:  MOVF   04,W
00B0:  MOVFF  06,FE0
00B4:  MOVFF  05,FD8
00B8:  RETFIE 0
.................... #include <18F4550.h> 
.................... //////// Standard Header file for the PIC18F4550 device //////////////// 
.................... #device PIC18F4550 
.................... #list 
....................  
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES WDT128                   //Watch Dog Timer uses 1:128 Postscale 
.................... #FUSES PLL1                     //No PLL PreScaler 
.................... #FUSES CPUDIV1                  //No System Clock Postscaler 
.................... #FUSES USBDIV                   //USB clock source comes from PLL divide by 2 
.................... #FUSES HS                       //High speed Osc (> 4mhz for PCM/PCH) (>10mhz for PCD) 
.................... #FUSES FCMEN                    //Fail-safe clock monitor enabled 
.................... #FUSES IESO                     //Internal External Switch Over mode enabled 
.................... #FUSES PUT                      //Power Up Timer 
.................... #FUSES NOBROWNOUT               //No brownout reset 
.................... #FUSES BORV20                   //Brownout reset at 2.0V 
.................... #FUSES VREGEN                   //USB voltage regulator enabled 
.................... #FUSES PBADEN                   //PORTB pins are configured as analog input channels on RESET 
.................... #FUSES LPT1OSC                  //Timer1 configured for low-power operation 
.................... #FUSES MCLR                     //Master Clear pin enabled 
.................... #FUSES STVREN                   //Stack full/underflow will cause reset 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES ICSP2                    //ICD uses PGC2/PGD2 pins 
.................... #FUSES NOXINST                  //Extended set extension and Indexed Addressing mode disabled (Legacy mode) 
.................... #FUSES NODEBUG                  //No Debug mode for ICD 
.................... #FUSES NOPROTECT                //Code not protected from reading 
.................... #FUSES NOCPB                    //No Boot Block code protection 
.................... #FUSES NOCPD                    //No EE protection 
.................... #FUSES NOWRT                    //Program memory not write protected 
.................... #FUSES NOWRTC                   //configuration not registers write protected 
.................... #FUSES NOWRTB                   //Boot block not write protected 
.................... #FUSES NOWRTD                   //Data EEPROM not write protected 
.................... #FUSES NOEBTR                   //Memory not protected from table reads 
.................... #FUSES NOEBTRB                  //Boot block not protected from table reads 
....................  
.................... #use delay(clock=20000000) 
00BA:  CLRF   FEA
00BC:  MOVLW  1C
00BE:  MOVWF  FE9
00C0:  MOVF   FEF,W
00C2:  BZ    00DE
00C4:  MOVLW  06
00C6:  MOVWF  01
00C8:  CLRF   00
00CA:  DECFSZ 00,F
00CC:  BRA    00CA
00CE:  DECFSZ 01,F
00D0:  BRA    00C8
00D2:  MOVLW  7B
00D4:  MOVWF  00
00D6:  DECFSZ 00,F
00D8:  BRA    00D6
00DA:  DECFSZ FEF,F
00DC:  BRA    00C4
00DE:  RETURN 0
.................... #use rs232(baud=9600,parity=N,xmit=PIN_C6,rcv=PIN_C7,bits=8) 
....................  
.................... //--------------------------Variables Globales-------------------------------- 
.................... char CAR; 
....................  
.................... //-----------------Se le pide a picc que no mueva los TRIS de los puertos 
.................... #use FAST_IO(A) 
.................... #use FAST_IO(B) 
.................... #use FAST_IO(C) 
.................... #use FAST_IO(D) 
.................... #use FAST_IO(E) 
....................  
.................... //--------------------Interrupcion de llegada de datos----------------------- 
....................  
.................... #int_EXT2 
.................... void cerrado(void) 
.................... { 
.................... delay_ms(100); 
00E0:  MOVLW  64
00E2:  MOVWF  1C
00E4:  RCALL  00BA
....................  
.................... } 
....................  
00E6:  BCF    FF0.1
00E8:  GOTO   006C
.................... #int_RDA 
.................... void  RDA_isr(void)  
.................... { 
.................... CAR=getc(); 
00EC:  BTFSS  F9E.5
00EE:  BRA    00EC
00F0:  MOVFF  FAE,1A
.................... } 
....................  
....................  
.................... //------------Subrutinas de acciones de los motores de avance----------------- 
00F4:  BCF    F9E.5
00F6:  GOTO   006C
.................... void adelante() 
.................... { 
....................    output_high(PIN_B6); 
*
0162:  BSF    F8A.6
....................    output_high(PIN_B7); 
0164:  BSF    F8A.7
....................    output_high(PIN_D0); 
0166:  BSF    F8C.0
....................    output_high(PIN_D2); 
0168:  BSF    F8C.2
....................    output_low(PIN_D1); 
016A:  BCF    F8C.1
....................    output_low(PIN_D3);   
016C:  BCF    F8C.3
.................... } 
016E:  GOTO   020C (RETURN)
....................  
.................... void atras() 
.................... { 
....................    output_high(PIN_B6); 
0172:  BSF    F8A.6
....................    output_high(PIN_B7); 
0174:  BSF    F8A.7
....................    output_high(PIN_D1); 
0176:  BSF    F8C.1
....................    output_high(PIN_D3); 
0178:  BSF    F8C.3
....................    output_low(PIN_D0); 
017A:  BCF    F8C.0
....................    output_low(PIN_D2); 
017C:  BCF    F8C.2
.................... } 
017E:  GOTO   023C (RETURN)
.................... void derecha_adelante() 
.................... { 
....................    output_high(PIN_B6); 
*
0192:  BSF    F8A.6
....................    output_low(PIN_B7); 
0194:  BCF    F8A.7
....................    output_high(PIN_D0); 
0196:  BSF    F8C.0
....................    output_low(PIN_D2); 
0198:  BCF    F8C.2
....................    output_low(PIN_D1); 
019A:  BCF    F8C.1
....................    output_low(PIN_D3); 
019C:  BCF    F8C.3
.................... } 
019E:  GOTO   029C (RETURN)
.................... void izquierda_adelante() 
.................... { 
....................    output_low(PIN_B6); 
01A2:  BCF    F8A.6
....................    output_high(PIN_B7); 
01A4:  BSF    F8A.7
....................    output_low(PIN_D0); 
01A6:  BCF    F8C.0
....................    output_high(PIN_D2); 
01A8:  BSF    F8C.2
....................    output_low(PIN_D1); 
01AA:  BCF    F8C.1
....................    output_low(PIN_D3); 
01AC:  BCF    F8C.3
.................... } 
01AE:  GOTO   02CC (RETURN)
.................... void derecha_atras() 
.................... { 
....................    output_high(PIN_B6); 
....................    output_low(PIN_B7); 
....................    output_high(PIN_D1); 
....................    output_low(PIN_D3); 
....................    output_low(PIN_D0); 
....................    output_low(PIN_D2); 
.................... } 
.................... void izquierda_atras() 
.................... { 
....................    output_low(PIN_B6); 
....................    output_high(PIN_B7); 
....................    output_low(PIN_D1); 
....................    output_high(PIN_D3); 
....................    output_low(PIN_D0); 
....................    output_low(PIN_D2); 
.................... } 
.................... void stop() 
.................... { 
....................    output_low(PIN_B6); 
*
0182:  BCF    F8A.6
....................    output_low(PIN_B7); 
0184:  BCF    F8A.7
....................    output_low(PIN_D1); 
0186:  BCF    F8C.1
....................    output_low(PIN_D3); 
0188:  BCF    F8C.3
....................    output_low(PIN_D0); 
018A:  BCF    F8C.0
....................    output_low(PIN_D2); 
018C:  BCF    F8C.2
.................... } 
018E:  GOTO   026C (RETURN)
.................... //-----------------Subrutinas del control del brazo------------------------ 
.................... void altura_arriba() 
.................... { 
....................    set_pwm1_duty(80); 
....................    set_pwm2_duty(0); 
....................    output_high(PIN_D4); 
....................    output_low(PIN_D5); 
....................     
.................... } 
....................  
.................... void altura_abajo() 
.................... { 
....................    set_pwm1_duty(80); 
....................    set_pwm2_duty(0); 
....................    output_low(PIN_D4); 
....................    output_high(PIN_D5);   
.................... } 
....................  
.................... void apertura() 
.................... { 
....................    set_pwm1_duty(0); 
....................    set_pwm2_duty(80); 
....................    output_low(PIN_D6); 
....................    output_high(PIN_D7); 
.................... } 
....................  
.................... void cierre() 
.................... { 
....................    set_pwm1_duty(0); 
....................    set_pwm2_duty(80); 
....................    output_low(PIN_D6); 
....................    output_high(PIN_D7); 
.................... } 
....................  
.................... void stop_alt() 
.................... { 
....................    set_pwm1_duty(0); 
....................    set_pwm2_duty(0); 
....................    output_low(PIN_D4); 
....................    output_low(PIN_D5); 
.................... } 
....................  
.................... void stop_cierre() 
.................... { 
....................    set_pwm1_duty(0); 
....................    set_pwm2_duty(0); 
....................    output_low(PIN_D4); 
....................    output_low(PIN_D5); 
.................... } 
....................  
.................... //--------------------------Configuracion del PIC----------------------------- 
.................... void cpu() 
.................... { 
....................  
....................    setup_psp(PSP_DISABLED); 
*
00FA:  BCF    F96.4
....................    setup_spi(SPI_SS_DISABLED); 
00FC:  BCF    FC6.5
00FE:  MOVLW  01
0100:  MOVWF  FC6
0102:  MOVLW  00
0104:  MOVWF  FC7
....................    setup_wdt(WDT_OFF); 
0106:  BCF    FD1.0
....................    setup_timer_0(RTCC_INTERNAL); 
0108:  MOVLW  80
010A:  MOVWF  FD5
....................    setup_timer_1(T1_DISABLED); 
010C:  CLRF   FCD
....................    setup_timer_2(T2_DIV_BY_4,88,1); 
010E:  MOVLW  00
0110:  IORLW  05
0112:  MOVWF  FCA
0114:  MOVLW  58
0116:  MOVWF  FCB
....................    setup_timer_3(T3_DISABLED|T3_DIV_BY_1); 
0118:  CLRF   FB1
....................    setup_ccp1(CCP_PWM); 
011A:  BCF    F8B.2
011C:  MOVLW  0C
011E:  MOVWF  FBD
0120:  CLRF   FB7
0122:  CLRF   FB6
....................    setup_ccp2(CCP_PWM); 
0124:  BCF    F8B.1
0126:  MOVWF  FBA
....................    set_pwm1_duty(0); 
0128:  CLRF   FBE
....................    set_pwm2_duty(0); 
012A:  CLRF   FBB
....................    setup_comparator(NC_NC_NC_NC); 
012C:  MOVLW  07
012E:  MOVWF  FB4
0130:  MOVF   F92,W
0132:  MOVWF  F92
0134:  MOVLW  10
0136:  MOVWF  00
0138:  DECFSZ 00,F
013A:  BRA    0138
013C:  NOP   
013E:  MOVF   FB4,W
0140:  BCF    FA1.6
....................    enable_interrupts(INT_RDA); 
0142:  BSF    F9D.5
....................    enable_interrupts(INT_EXT2); 
0144:  BSF    FF0.4
....................    enable_interrupts(GLOBAL); 
0146:  MOVLW  C0
0148:  IORWF  FF2,F
....................  
....................     
....................    //0x00 Salida 
....................    //0xFF Entrada 
....................    set_tris_A(0xFF);  
014A:  MOVLW  FF
014C:  MOVWF  F92
....................    SET_TRIS_B(0b00111111);  
014E:  MOVLW  3F
0150:  MOVWF  F93
....................    SET_TRIS_C(0b10111110); 
0152:  MOVLW  BE
0154:  MOVWF  F94
....................    SET_TRIS_D(0X00); 
0156:  MOVLW  00
0158:  MOVWF  F95
....................    SET_TRIS_E(0xFF); 
015A:  MOVLW  FF
015C:  MOVWF  F96
....................   
.................... } 
015E:  GOTO   01DC (RETURN)
....................  
.................... //Programa Princicpal 
.................... void main() 
.................... { 
*
01B2:  CLRF   FF8
01B4:  BCF    FD0.7
01B6:  BSF    07.7
01B8:  CLRF   FEA
01BA:  CLRF   FE9
01BC:  BSF    FB8.3
01BE:  MOVLW  08
01C0:  MOVWF  FAF
01C2:  MOVLW  02
01C4:  MOVWF  FB0
01C6:  MOVLW  A6
01C8:  MOVWF  FAC
01CA:  MOVLW  90
01CC:  MOVWF  FAB
01CE:  MOVF   FC1,W
01D0:  ANDLW  C0
01D2:  IORLW  0F
01D4:  MOVWF  FC1
01D6:  MOVLW  07
01D8:  MOVWF  FB4
....................    cpu(); 
01DA:  BRA    00FA
....................    //Led para saber que el progrma inicio 
....................    output_high(PIN_C0); 
01DC:  BSF    F8B.0
01DE:  CLRF   19
01E0:  BTFSC  FF2.7
01E2:  BSF    19.7
01E4:  BCF    FF2.7
....................    delay_ms(100); 
01E6:  MOVLW  64
01E8:  MOVWF  1C
01EA:  RCALL  00BA
01EC:  BTFSC  19.7
01EE:  BSF    FF2.7
....................    output_low(PIN_C0); 
01F0:  BCF    F8B.0
01F2:  CLRF   19
01F4:  BTFSC  FF2.7
01F6:  BSF    19.7
01F8:  BCF    FF2.7
....................    delay_ms(100); 
01FA:  MOVLW  64
01FC:  MOVWF  1C
01FE:  RCALL  00BA
0200:  BTFSC  19.7
0202:  BSF    FF2.7
....................     
....................    while(true) 
....................    { 
....................  
....................     if(CAR=='a'){ 
0204:  MOVF   1A,W
0206:  SUBLW  61
0208:  BNZ   0234
....................       adelante(); 
020A:  BRA    0162
....................       output_high(PIN_C0); 
020C:  BSF    F8B.0
020E:  CLRF   19
0210:  BTFSC  FF2.7
0212:  BSF    19.7
0214:  BCF    FF2.7
....................       delay_ms(100); 
0216:  MOVLW  64
0218:  MOVWF  1C
021A:  RCALL  00BA
021C:  BTFSC  19.7
021E:  BSF    FF2.7
....................       output_low(PIN_C0); 
0220:  BCF    F8B.0
0222:  CLRF   19
0224:  BTFSC  FF2.7
0226:  BSF    19.7
0228:  BCF    FF2.7
....................       delay_ms(100); 
022A:  MOVLW  64
022C:  MOVWF  1C
022E:  RCALL  00BA
0230:  BTFSC  19.7
0232:  BSF    FF2.7
....................     } 
....................     if(CAR=='b'){ 
0234:  MOVF   1A,W
0236:  SUBLW  62
0238:  BNZ   0264
....................       atras(); 
023A:  BRA    0172
....................       output_high(PIN_C0); 
023C:  BSF    F8B.0
023E:  CLRF   19
0240:  BTFSC  FF2.7
0242:  BSF    19.7
0244:  BCF    FF2.7
....................       delay_ms(100); 
0246:  MOVLW  64
0248:  MOVWF  1C
024A:  RCALL  00BA
024C:  BTFSC  19.7
024E:  BSF    FF2.7
....................       output_low(PIN_C0); 
0250:  BCF    F8B.0
0252:  CLRF   19
0254:  BTFSC  FF2.7
0256:  BSF    19.7
0258:  BCF    FF2.7
....................       delay_ms(100); 
025A:  MOVLW  64
025C:  MOVWF  1C
025E:  RCALL  00BA
0260:  BTFSC  19.7
0262:  BSF    FF2.7
....................     } 
....................     if(CAR=='c'){ 
0264:  MOVF   1A,W
0266:  SUBLW  63
0268:  BNZ   0294
....................       stop(); 
026A:  BRA    0182
....................       output_high(PIN_C0); 
026C:  BSF    F8B.0
026E:  CLRF   19
0270:  BTFSC  FF2.7
0272:  BSF    19.7
0274:  BCF    FF2.7
....................       delay_ms(100); 
0276:  MOVLW  64
0278:  MOVWF  1C
027A:  RCALL  00BA
027C:  BTFSC  19.7
027E:  BSF    FF2.7
....................       output_low(PIN_C0); 
0280:  BCF    F8B.0
0282:  CLRF   19
0284:  BTFSC  FF2.7
0286:  BSF    19.7
0288:  BCF    FF2.7
....................       delay_ms(100); 
028A:  MOVLW  64
028C:  MOVWF  1C
028E:  RCALL  00BA
0290:  BTFSC  19.7
0292:  BSF    FF2.7
....................     } 
....................     if(CAR=='d'){ 
0294:  MOVF   1A,W
0296:  SUBLW  64
0298:  BNZ   02C4
....................       derecha_adelante(); 
029A:  BRA    0192
....................       output_high(PIN_C0); 
029C:  BSF    F8B.0
029E:  CLRF   19
02A0:  BTFSC  FF2.7
02A2:  BSF    19.7
02A4:  BCF    FF2.7
....................       delay_ms(100); 
02A6:  MOVLW  64
02A8:  MOVWF  1C
02AA:  RCALL  00BA
02AC:  BTFSC  19.7
02AE:  BSF    FF2.7
....................       output_low(PIN_C0); 
02B0:  BCF    F8B.0
02B2:  CLRF   19
02B4:  BTFSC  FF2.7
02B6:  BSF    19.7
02B8:  BCF    FF2.7
....................       delay_ms(100); 
02BA:  MOVLW  64
02BC:  MOVWF  1C
02BE:  RCALL  00BA
02C0:  BTFSC  19.7
02C2:  BSF    FF2.7
....................     } 
....................     if(CAR=='e'){ 
02C4:  MOVF   1A,W
02C6:  SUBLW  65
02C8:  BNZ   02F4
....................       izquierda_adelante(); 
02CA:  BRA    01A2
....................       output_high(PIN_C0); 
02CC:  BSF    F8B.0
02CE:  CLRF   19
02D0:  BTFSC  FF2.7
02D2:  BSF    19.7
02D4:  BCF    FF2.7
....................       delay_ms(100); 
02D6:  MOVLW  64
02D8:  MOVWF  1C
02DA:  RCALL  00BA
02DC:  BTFSC  19.7
02DE:  BSF    FF2.7
....................       output_low(PIN_C0); 
02E0:  BCF    F8B.0
02E2:  CLRF   19
02E4:  BTFSC  FF2.7
02E6:  BSF    19.7
02E8:  BCF    FF2.7
....................       delay_ms(100); 
02EA:  MOVLW  64
02EC:  MOVWF  1C
02EE:  RCALL  00BA
02F0:  BTFSC  19.7
02F2:  BSF    FF2.7
....................     } 
....................    } 
02F4:  BRA    0204
.................... } 
02F6:  SLEEP 

Configuration Fuses:
   Word  1: CC20   PLL1 CPUDIV1 USBDIV HS FCMEN IESO
   Word  2: 0E38   PUT NOBROWNOUT BORV20 VREGEN NOWDT WDT128
   Word  3: 8700   CCP2C1 PBADEN LPT1OSC MCLR
   Word  4: 00A1   STVREN NOLVP ICSP2 NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
